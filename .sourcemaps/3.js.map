{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAR3B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACZ+B;AACf;AACqB;AACH;AACpB;AACe;AASzD;IAUE,mBAAmB,OAAsB,EAAS,SAAoB,EAC7D,cAA8B,EAAS,SAAwB,EAAS,KAAY,EACpF,QAAuB;QAFb,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAC7D,mBAAc,GAAd,cAAc,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAe;QAAS,UAAK,GAAL,KAAK,CAAO;QACpF,aAAQ,GAAR,QAAQ,CAAe;QAVhC,uBAAkB,GAAQ,KAAK,CAAC;QAChC,YAAO,GAAQ,EAAE,CAAC;QAClB,iBAAY,GAAQ,EAAE,CAAC;QACvB,aAAQ,GAAQ,EAAE,CAAC;QACnB,qBAAgB,GAAQ,EAAE,CAAC;IAO3B,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAED,0BAAM,GAAN;QASE,mCAAmC;IACrC,CAAC;IAKD,yBAAK,GAAL;QAEE,qCAAqC;QACrC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC9D,MAAM,CAAC;QACT,CAAC;QACD,gCAAgC;QAChC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACxD,MAAM,CAAC;QACT,CAAC;QAED,gCAAgC;QAChC,EAAE,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC;YAClD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACzD,MAAM,CAAC;QACT,CAAC;QAED,2CAA2C;QAC3C,iBAAiB;QACjB,IAAI,6BAA6B,GAAG;YAClC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAG,IAAI,CAAC,QAAQ;YAC1B,SAAS,EAAG,GAAG;SAChB,CAAC;QAEF,8BAA8B;QAC9B,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,CAAC;QAE/E,cAAc;QAEd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,6BAA6B,EAAC,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,wCAA8B;YAEvH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC,CAAC;YAC5D,OAAO,CAAC,OAAO,EAAE,CAAC;QAEpB,CAAC,CAAC,CAAC;IAGL,CAAC;IA1EU,SAAS;QAJrB,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;2KAW4B,8DAA0C;YAC7C,4EAAoE;YACzE,MAAY;OAZrB,SAAS,CA2ErB;IAAD,CAAC;AAAA;SA3EY,SAAS,e","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { HttpProvider } from './../../providers/data/data';\nimport { Codes } from './../../Utils/Codes';\nimport { MessageHelper } from './../../providers/message-helper';\nimport { DataValidation } from './../../Utils/DataValidation';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n\n  authenticationSent: any = false;\n  emailId: any = \"\";\n  mobileNumber: any = \"\";\n  password: any = \"\";\n  verificationCode: any = \"\";\n\n\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n    public dataValidation: DataValidation, public msgHelper: MessageHelper, public codes: Codes,\n    public httpCall : HttpProvider) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LoginPage');\n  }\n\n  verify() {\n\n\n\n\n\n\n\n\n    //this.navCtrl.setRoot('HomePage');\n  }\n\n\n\n\n  login() {\n\n    //Step 1 : Validate the mobile number\n    if (!this.dataValidation.isValidMobileNumber(this.mobileNumber)) {\n      this.msgHelper.showToast(this.codes.EM_INVALID_MOBILE_NUMBER);\n      return;\n    }\n    //Step 2 : Validate the email id\n    if (!this.dataValidation.isValidEmailId(this.emailId)) {\n      this.msgHelper.showToast(this.codes.EM_INVALID_EMAILID);\n      return;\n    }\n\n    //Step 3 : Validate the password\n    if(!this.dataValidation.isEmptyJson(this.password)){\n      this.msgHelper.showToast(this.codes.EM_INVALID_PASSWORD);\n      return;\n    }\n\n    //Step 4 : Make the API call for logging in\n    //Create the json\n    var getLoginDetailsApiRequestJson = {\n      \"email\" :this.emailId,\n      \"password\" : this.password,\n      \"apptype\" : \"W\",\n    };\n\n    //start the loading controller\n    var loading = this.msgHelper.showWorkingDialog(\"Sending verification message\");\n\n    //Call the API\n\n    this.httpCall.callApi(getLoginDetailsApiRequestJson,this.codes.API_GET_LOGIN_DETAILS).then(getLoginDetailsApiResponseJson => {\n\n      console.log(JSON.stringify(getLoginDetailsApiResponseJson));\n      loading.dismiss();\n        \n    });\n\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}
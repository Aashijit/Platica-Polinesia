{"version":3,"sources":["../../src/pages/recognitions/recognitions.module.ts","../../src/pages/recognitions/recognitions.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { RoundProgressModule } from 'angular-svg-round-progressbar';\nimport { ComponentsModule } from './../../components/components.module';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RecognitionsPage } from './recognitions';\n\n@NgModule({\n  declarations: [\n    RecognitionsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RecognitionsPage),\n    RoundProgressModule,\n    ComponentsModule\n  ],\n})\nexport class RecognitionsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recognitions/recognitions.module.ts","import { AlertController } from 'ionic-angular';\nimport { MessageHelper } from './../../providers/message-helper';\nimport { DataValidation } from './../../Utils/DataValidation';\nimport { Codes } from './../../Utils/Codes';\nimport { HttpProvider } from './../../providers/data/data';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Grid } from 'ionic-angular';\nimport { ModalController } from 'ionic-angular';\nimport { DatePipe } from '@angular/common';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-recognitions',\n  templateUrl: 'recognitions.html',\n})\nexport class RecognitionsPage {\n\n  projects: any = null;\n  recognitions: any = null;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modalCtrl: ModalController,\n    public httpCall: HttpProvider, public codes: Codes, public dataValidation: DataValidation,\n    public msgHelper: MessageHelper, public alertController: AlertController, public datePipe : DatePipe) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RecognitionsPage');\n\n    //Call the change password API\n    var currentUserInfo = JSON.parse(localStorage.getItem(this.codes.LSK_USER_INFORMATION_JSON));\n\n    console.error(JSON.stringify(currentUserInfo));\n\n    if (this.dataValidation.isEmptyJson(currentUserInfo)) {\n      this.msgHelper.showToast('Could not fetch user id');\n      return;\n    }\n\n    //Get user wise project list\n    var requestJson = {\n      \"AssignedUserId\": currentUserInfo[0]['UserId'],\n      \"ProjectYear\": new Date().getFullYear(),\n      \"AppType\": \"W\"\n    };\n\n    this.httpCall.callApi(requestJson, this.codes.API_GET_USER_WISE_PROJECT_REPORT).then(responseJson => {\n\n      if (this.dataValidation.isEmptyJson(responseJson)) {\n        this.msgHelper.showErrorDialog('Error !!', 'Empty response received from server !!!');\n        return;\n      }\n\n      this.projects = responseJson['resultData'];\n\n      //Call the recognitions for every projects\n\n      for (let i = 0; i < this.projects.length; i++) {\n\n        var reqJson = {\n          \"ProjectId\": this.projects[i]['ProjectId'],\n          \"AssignedUserId\": currentUserInfo[0]['UserId'],\n          \"ProjectYear\": new Date().getFullYear(),\n          \"AppType\": \"W\"\n        }\n\n        this.httpCall.callApi(reqJson,this.codes.API_GET_USER_WISE_RECOGNITION).then(respJson => {\n\n          if (this.dataValidation.isEmptyJson(respJson)) {\n            console.error(\"Empty Response \");\n            return;\n          }\n          this.projects[i]['recognitions'] = respJson['resultData'];\n        });\n      }\n      console.warn(JSON.stringify(this.projects));\n    });\n  }\n\n\n  //TODO: Fix this\n  getProjectTypeImage(projectImage){\n    if(projectImage == \"Icons/microphone.png\"){\n      return \"../../assets/imgs/icon_mic.png\";\n    }\n    return \"../../assets/imgs/icon_image.png\";\n}\n\n  goToUserMessages() {\n    let userModal = this.modalCtrl.create('UserMessageNotificationListPage');\n    userModal.present();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recognitions/recognitions.ts"],"sourceRoot":""}
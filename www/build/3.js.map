{"version":3,"sources":["../../src/pages/rewards/rewards.module.ts","../../src/pages/rewards/rewards.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAoE;AACI;AAC/B;AACO;AACR;AAYxC;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAV7B,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAW;aACZ;YACD,OAAO,EAAE;gBACP,8DAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;gBACrC,kFAAmB;gBACnB,uFAAgB;aACjB;SACF,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AACiB;AACH;AAClB;AACe;AACjB;AACqB;AACf;AAQhD;IAIE,qBAAmB,OAAsB,EAAS,SAAoB,EAAS,SAA0B,EAChG,QAAsB,EAAS,KAAY,EAAS,cAA8B,EAClF,SAAwB,EAAS,eAAgC;QAFvD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,cAAS,GAAT,SAAS,CAAiB;QAChG,aAAQ,GAAR,QAAQ,CAAc;QAAS,UAAK,GAAL,KAAK,CAAO;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAClF,cAAS,GAAT,SAAS,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAJ1E,gBAAW,GAAS,IAAI,CAAC;IAKzB,CAAC;IAED,oCAAc,GAAd;QAAA,iBA8BC;QA7BC,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAG1C,IAAI,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;QAE7F,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAE/C,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;YACpD,MAAM,CAAC;QACT,CAAC;QAED,IAAI,WAAW,GAAG;YAChB,gBAAgB,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC9C,aAAa,EAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;YACtC,SAAS,EAAE,GAAG;SACf,CAAC;QAGF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAC,IAAI,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC,IAAI,CAAC,sBAAY;YAE5F,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAClD,KAAI,CAAC,SAAS,CAAC,eAAe,CAAC,UAAU,EAAE,yCAAyC,CAAC,CAAC;gBACtF,MAAM,CAAC;YACT,CAAC;YAED,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC;YAC9C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAvCU,WAAW;QAJvB,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;WACG;SAC5B,CAAC;oBAO0E;OAN/D,WAAW,CAwCvB;IAAD,kBAAC;;AAAA;SAxCY,WAAW,e","file":"3.js","sourcesContent":["import { RoundProgressModule } from 'angular-svg-round-progressbar';\nimport { ComponentsModule } from './../../components/components.module';\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RewardsPage } from './rewards';\n\n@NgModule({\n  declarations: [\n    RewardsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RewardsPage),\n    RoundProgressModule,\n    ComponentsModule\n  ],\n})\nexport class RewardsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/rewards/rewards.module.ts","import { AlertController } from 'ionic-angular';\nimport { MessageHelper } from './../../providers/message-helper';\nimport { DataValidation } from './../../Utils/DataValidation';\nimport { Codes } from './../../Utils/Codes';\nimport { HttpProvider } from './../../providers/data/data';\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, Grid } from 'ionic-angular';\nimport { ModalController } from 'ionic-angular';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-rewards',\n  templateUrl: 'rewards.html',\n})\nexport class RewardsPage {\n\n  rewardCount : any = null;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modalCtrl: ModalController,\n    public httpCall: HttpProvider, public codes: Codes, public dataValidation: DataValidation,\n    public msgHelper: MessageHelper, public alertController: AlertController) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RewardsPage');\n\n\n    var currentUserInfo = JSON.parse(localStorage.getItem(this.codes.LSK_USER_INFORMATION_JSON));\n\n    console.error(JSON.stringify(currentUserInfo));\n\n    if (this.dataValidation.isEmptyJson(currentUserInfo)) {\n      this.msgHelper.showToast('Could not fetch user id');\n      return;\n    }\n\n    var requestJson = {\n      \"AssignedUserId\": currentUserInfo[0]['UserId'],\n      \"ProjectYear\":new Date().getFullYear(),\n      \"AppType\": \"W\"\n    };\n\n\n    this.httpCall.callApi(requestJson,this.codes.API_GET_USER_WISE_REWARD_COUNT).then(responseJson => {\n\n      if (this.dataValidation.isEmptyJson(responseJson)) {\n        this.msgHelper.showErrorDialog('Error !!', 'Empty response received from server !!!');\n        return;\n      }\n\n      this.rewardCount = responseJson['resultData'];\n      console.warn(JSON.stringify(this.rewardCount));\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/rewards/rewards.ts"],"sourceRoot":""}
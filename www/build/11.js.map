{"version":3,"sources":["../../src/pages/add-brand/add-brand.module.ts","../../src/pages/add-brand/add-brand.ts"],"names":[],"mappings":"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","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddBrandPage } from './add-brand';\n\n@NgModule({\n  declarations: [\n    AddBrandPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddBrandPage),\n  ],\n})\nexport class AddBrandPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-brand/add-brand.module.ts","import { AlertController } from 'ionic-angular';\nimport { DataValidation } from './../../Utils/DataValidation';\nimport { Codes } from './../../Utils/Codes';\nimport { HttpProvider } from './../../providers/data/data';\nimport { MessageHelper } from './../../providers/message-helper';\nimport { Component } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IonicPage, NavController, NavParams, ActionSheetController } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-add-brand',\n  templateUrl: 'add-brand.html',\n})\nexport class AddBrandPage {\n\n  brandName : any;\n  brandDescription : any;\n  brandOwnerId : any;\n  brandImage : any = '../../assets/imgs/user.png';\n  brandImageBlob : any = null;\n  UserList : any = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public msgHelper : MessageHelper,\n    public httpCall : HttpProvider,public codes : Codes,public dataValidation : DataValidation,\n    public actionSheet : ActionSheetController,public alertController : AlertController,\n    private camera : Camera ) {\n      this.UserList = this.navParams.get('userList');\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AddBrandPage');\n  }\n\n\n  addBrand(){\n\n      //Call the change password API\n      var currentUserInfo = JSON.parse(localStorage.getItem(this.codes.LSK_USER_INFORMATION_JSON));\n\n      console.error(JSON.stringify(currentUserInfo));\n  \n      if(this.dataValidation.isEmptyJson(currentUserInfo)){\n        this.msgHelper.showToast('Could not fetch user id');\n        return;\n      }\n  \n      //Inserting a new user profile\n      var loading = this.msgHelper.showWorkingDialog('Creating your brand ...');\n  \n      alert(this.brandDescription);\n\n      var apiUpdateString = this.codes.API_INSERT_BRAND+\n      '?brname='+this.removeNull(this.brandName)+\n      '&brdesc='+this.removeNull(this.brandDescription)+\n      '&brownerid='+this.removeNull(this.brandOwnerId)+\n      '&brcreatebyid='+currentUserInfo[0]['UserId']+\n      '&AppType=W';\n      //TODO: Fix this\n  \n      if(this.brandImageBlob == null){\n        this.msgHelper.showErrorDialog('Error !!!','Brand Image is mandatory');\n        return;\n      }\n  \n  \n      var formData : any= new FormData();\n      formData.append(\"file\", this.brandImageBlob);\n\n      console.error(apiUpdateString);\n  \n      this.httpCall.uploadFile(formData,apiUpdateString).then(responseJson => {\n         //Dismiss the loader\n         loading.dismiss();\n  \n         //Validate\n         if(this.dataValidation.isEmptyJson(responseJson)){\n           this.msgHelper.showErrorDialog('Error !!','Empty response received from server !!!');\n           return;\n         }\n  \n         if(responseJson['status'] == 1){\n          this.msgHelper.showToast('Brand Added !!!');\n          this.navCtrl.pop();\n         }\n      });\n  }\n\n  removeNull(variable){\n    if(variable == null || variable == undefined || variable == 0)\n      return '';\n    return  variable;\n  }\n\n  presentActionSheetToUpdateImage() {\n    let actionSheet = this.actionSheet.create({\n      title: 'Update your brand picture',\n      buttons: [\n        {\n          text: 'Capture an image',\n          role: 'camera',\n          icon: 'camera',\n          handler: () => {\n\n            const options: CameraOptions = {\n              quality: 100,\n              sourceType : this.camera.PictureSourceType.CAMERA,\n              destinationType: this.camera.DestinationType.DATA_URL,\n              encodingType: this.camera.EncodingType.JPEG,\n              mediaType: this.camera.MediaType.PICTURE\n            }\n            \n            this.camera.getPicture(options).then((imageData) => {\n             // imageData is either a base64 encoded string or a file URI\n             // If it's base64 (DATA_URL):             \n             console.error(imageData);\n             let base64Image = 'data:image/jpeg;base64,' + imageData;\n             this.brandImage  = base64Image;\n             this.brandImageBlob = this.convertBase64ToBlob(base64Image);\n\n            }, (err) => {\n             // Handle error\n            });\n          }\n        },\n        {\n          text: 'Select from gallery',\n          role: 'gallery',\n          icon: 'image',\n          handler: () => {\n\n            const options: CameraOptions = {\n              quality: 100,\n              sourceType : this.camera.PictureSourceType.PHOTOLIBRARY,\n              destinationType: this.camera.DestinationType.DATA_URL,\n              encodingType: this.camera.EncodingType.JPEG,\n              mediaType: this.camera.MediaType.PICTURE\n            }\n            \n            this.camera.getPicture(options).then((imageData) => {\n             // imageData is either a base64 encoded string or a file URI\n             // If it's base64 (DATA_URL):\n             console.error(imageData);\n             let base64Image = 'data:image/jpeg;base64,' + imageData;\n             \n             this.brandImage  = base64Image;\n             this.brandImageBlob = this.convertBase64ToBlob(base64Image);\n            }, (err) => {\n             // Handle error\n            });\n          }\n        },\n        {\n          text: 'Close',\n          role: 'close',\n          icon : 'close',\n          handler: () => {\n            actionSheet.dismiss();\n          }\n        }\n      ]\n    });\n    actionSheet.present();\n  }\n\n\n  private convertBase64ToBlob(base64: string) {\n    const info = this.getInfoFromBase64(base64);\n    const sliceSize = 512;\n    const byteCharacters = window.atob(info.rawBase64);\n    const byteArrays = [];\n\n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n      const byteNumbers = new Array(slice.length);\n\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n\n      byteArrays.push(new Uint8Array(byteNumbers));\n    }\n\n    return new Blob(byteArrays, { type: info.mime });\n  }\n\n  private getInfoFromBase64(base64: string) {\n    const meta = base64.split(',')[0];\n    const rawBase64 = base64.split(',')[1].replace(/\\s/g, '');\n    const mime = /:([^;]+);/.exec(meta)[1];\n    const extension = /\\/([^;]+);/.exec(meta)[1];\n\n    alert(mime);\n\n    return {\n      mime,\n      extension,\n      meta,\n      rawBase64\n    };\n  }\n\n \n\n  closeModal(){\n    this.navCtrl.pop();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add-brand/add-brand.ts"],"sourceRoot":""}
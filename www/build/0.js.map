{"version":3,"sources":["../../src/pages/user-message-notification-list/user-message-notification-list.module.ts","../../src/pages/user-message-notification-list/user-message-notification-list.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { RoundProgressModule } from 'angular-svg-round-progressbar';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { UserMessageNotificationListPage } from './user-message-notification-list';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserMessageNotificationListPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(UserMessageNotificationListPage),\r\n    RoundProgressModule\r\n  ],\r\n})\r\nexport class UserMessageNotificationListPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-message-notification-list/user-message-notification-list.module.ts","import { AlertController } from 'ionic-angular';\r\nimport { DataValidation } from './../../Utils/DataValidation';\r\nimport { MessageHelper } from './../../providers/message-helper';\r\nimport { Codes } from './../../Utils/Codes';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams,  ActionSheetController } from 'ionic-angular';\r\nimport { HttpProvider } from '../../providers/data/data';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-user-message-notification-list',\r\n  templateUrl: 'user-message-notification-list.html',\r\n})\r\nexport class UserMessageNotificationListPage {\r\n\r\n  userName : any= 'User';\r\n  userInformation : any = null;\r\n  showUserInformation : boolean = false;\r\n  newPassword : string = null;\r\n  profileImage : any = '../../assets/imgs/user.png';\r\n  messageList : any =  null;\r\n  notificationList : any =  null;\r\n  segment : any = 'messages';\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams,public codes : Codes,\r\n    public msgHelper : MessageHelper,public httpCall : HttpProvider,public dataValidation : DataValidation,\r\n    public actionSheet : ActionSheetController,public alertController : AlertController,\r\n    public camera : Camera, public datePipe : DatePipe) {\r\n\r\n     //Get the  parameter from the local storage\r\n    \r\n     this.userInformation = JSON.parse(localStorage.getItem(this.codes.LSK_USER_INFORMATION_JSON));\r\n     console.error(this.userInformation[0]);\r\n     this.userName = this.userInformation[0]['FirstName'];\r\n   }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad UserMessageNotificationListPage');\r\n\r\n    // Call the messages and Notifications API parallely\r\n    var requestJson = {\r\n      \"RecipientuserId\":this.userInformation[0]['UserId'],\r\n       \"MessageType\": \"M\", \r\n       \"AppType\": \"W\"\r\n       };     \r\n\r\n       console.error(requestJson);\r\n      \r\n\r\n       this.httpCall.callApi(requestJson,this.codes.API_GET_MESSAGES_NOTIFICATIONS).then(responseJson => {\r\n\r\n        if(this.dataValidation.isEmptyJson(responseJson)){\r\n          this.msgHelper.showErrorDialog('Error !!!',\"Empty response received from GetMessageTypeList API\");\r\n          return;          \r\n        }\r\n\r\n        if(responseJson['status'] != 1){\r\n          this.msgHelper.showErrorDialog('Error !!!',responseJson['resMessage']);\r\n          return;\r\n        }\r\n\r\n        this.messageList = responseJson['resultData'];\r\n      });\r\n\r\n\r\n\r\n      //Get Notifications\r\n      var requestJson = {\r\n        \"RecipientuserId\":this.userInformation[0]['UserId'],\r\n         \"MessageType\": \"N\", \r\n         \"AppType\": \"W\"\r\n         };     \r\n  \r\n         console.error(requestJson);\r\n        \r\n  \r\n         this.httpCall.callApi(requestJson,this.codes.API_GET_MESSAGES_NOTIFICATIONS).then(responseJson => {\r\n  \r\n          if(this.dataValidation.isEmptyJson(responseJson)){\r\n            this.msgHelper.showErrorDialog('Error !!!',\"Empty response received from GetMessageTypeList API\");\r\n            return;          \r\n          }\r\n  \r\n          if(responseJson['status'] != 1){\r\n            this.msgHelper.showErrorDialog('Error !!!',responseJson['resMessage']);\r\n            return;\r\n          }\r\n          \r\n          this.notificationList = responseJson['resultData'];\r\n        });\r\n\r\n  }\r\n\r\n  closeModal(){\r\n    this.navCtrl.pop();\r\n  }\r\n\r\n  showUserEditInformation(){\r\n    //Show the contents of the user information -- Do it vice versa\r\n    this.showUserInformation = !this.showUserInformation;\r\n  }\r\n\r\n\r\n  //Log Out function\r\n  logOut(){\r\n\r\n    //Ask for permission from the user to log out\r\n    const alert = this.alertController.create({\r\n      title: 'Log Out',\r\n      message: 'You will be logged out from this app.<strong>Are you sure?</strong>',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          role: 'no',\r\n          handler: () => {\r\n            \r\n          }\r\n        }, {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            //Empty the local storage\r\n            localStorage.removeItem(this.codes.LSK_USER_INFORMATION_JSON);\r\n            this.navCtrl.setRoot('LoginPage');\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n     alert.present();\r\n\r\n  }\r\n\r\n  updateUserInformation(){\r\n    //Update the alerady present json to update the information\r\n    var loading = this.msgHelper.showWorkingDialog('Updating your profile');\r\n\r\n    var apiUpdateString = this.codes.API_UPDATE_USER+\r\n    '?uid='+this.userInformation[0]['UserId']+\r\n    '&ufname='+this.removeNull(this.userInformation[0]['FirstName'])+\r\n    '&umname='+this.removeNull(this.userInformation[0]['MiddleName'])+\r\n    '&ulname='+this.removeNull(this.userInformation[0]['LastName'])+\r\n    '&uadd1='+this.removeNull(this.userInformation[0]['Address1'])+\r\n    '&uadd2='+this.removeNull(this.userInformation[0]['Address2'])+\r\n    '&ucity='+this.removeNull(this.userInformation[0]['City'])+\r\n    '&ustate='+this.removeNull(this.userInformation[0]['State'])+\r\n    '&uzip='+this.removeNull(this.userInformation[0]['Pincode'])+\r\n    '&uactivestatus=true'+\r\n    '&umodifybyid='+this.removeNull(this.userInformation[0]['UserId'])+\r\n    '&uparentbyid=0'+\r\n    '&upwd='+localStorage.getItem(this.codes.LSK_USER_PASSWORD)+\r\n    '&AppType=W&updateWithImageStatus=N';//TODO: Fix this\r\n\r\n    this.httpCall.callApi('',apiUpdateString).then(responseJson => {\r\n       //Dismiss the loader\r\n       loading.dismiss();\r\n\r\n       //Validate\r\n       if(this.dataValidation.isEmptyJson(responseJson)){\r\n         this.msgHelper.showErrorDialog('Error !!','Empty response received from server !!!');\r\n         return;\r\n       }\r\n\r\n       if(responseJson['status'] == 1){\r\n        this.msgHelper.showToast('Profile Information Updated !!!');\r\n        localStorage.removeItem(this.codes.LSK_USER_INFORMATION_JSON);\r\n        localStorage.setItem(this.codes.LSK_USER_INFORMATION_JSON,JSON.stringify(this.userInformation));\r\n       }\r\n    });\r\n  }\r\n\r\n\r\n  removeNull(variable){\r\n    if(variable == null || variable == undefined || variable == 0)\r\n      return '';\r\n    return  variable;\r\n  }\r\n\r\n  presentActionSheetToUpdateImage() {\r\n    let actionSheet = this.actionSheet.create({\r\n      title: 'Update your profile picture',\r\n      buttons: [\r\n        {\r\n          text: 'Capture an image',\r\n          role: 'camera',\r\n          icon: 'camera',\r\n          handler: () => {\r\n\r\n            const options: CameraOptions = {\r\n              quality: 100,\r\n              sourceType : this.camera.PictureSourceType.CAMERA,\r\n              destinationType: this.camera.DestinationType.FILE_URI,\r\n              encodingType: this.camera.EncodingType.JPEG,\r\n              mediaType: this.camera.MediaType.PICTURE\r\n            }\r\n            \r\n            this.camera.getPicture(options).then((imageData) => {\r\n             // imageData is either a base64 encoded string or a file URI\r\n             // If it's base64 (DATA_URL):\r\n             let base64Image = 'data:image/jpeg;base64,' + imageData;\r\n             this.profileImage  = base64Image;\r\n            }, (err) => {\r\n             // Handle error\r\n            });\r\n          }\r\n        },\r\n        {\r\n          text: 'Select from gallery',\r\n          role: 'gallery',\r\n          icon: 'image',\r\n          handler: () => {\r\n\r\n            const options: CameraOptions = {\r\n              quality: 100,\r\n              sourceType : this.camera.PictureSourceType.PHOTOLIBRARY,\r\n              destinationType: this.camera.DestinationType.FILE_URI,\r\n              encodingType: this.camera.EncodingType.JPEG,\r\n              mediaType: this.camera.MediaType.PICTURE\r\n            }\r\n            \r\n            this.camera.getPicture(options).then((imageData) => {\r\n             // imageData is either a base64 encoded string or a file URI\r\n             // If it's base64 (DATA_URL):\r\n             let base64Image = 'data:image/jpeg;base64,' + imageData;\r\n             this.profileImage  = base64Image;\r\n            }, (err) => {\r\n             // Handle error\r\n            });\r\n\r\n\r\n\r\n          }\r\n        },\r\n        {\r\n          text: 'Close',\r\n          role: 'close',\r\n          icon : 'close',\r\n          handler: () => {\r\n            actionSheet.dismiss();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n \r\n    actionSheet.present();\r\n  }\r\n\r\n  changePassword(){\r\n    const alert = this.alertController.create({\r\n      title: 'Password to be changed',\r\n      message: 'Please note down the password.',\r\n      buttons: [\r\n        {\r\n          text: 'No',\r\n          role: 'no',\r\n          handler: () => {\r\n            \r\n          }\r\n        }, {\r\n          text: 'Yes',\r\n          handler: () => {\r\n\r\n            //Validation\r\n            if(this.dataValidation.isEmptyJson(this.newPassword)){\r\n              this.msgHelper.showToast('Please enter a new password !!!');\r\n              return;\r\n            }\r\n\r\n\r\n            if(String(this.newPassword).length >= 50){\r\n              this.msgHelper.showToast('Password cannot be more than 50 characters !!!');\r\n              return;\r\n            }\r\n\r\n\r\n            //Call the delete user API\r\n            var requestJson={\r\n              \"UserId\": this.userInformation[0]['UserId'],\r\n              \"OldPassword\": localStorage.getItem(this.codes.LSK_USER_PASSWORD),\r\n              \"NewPassword\": this.newPassword,\r\n              \"ModifiedById\": this.userInformation[0]['UserId'],\r\n              \"AppType\": \"W\"\r\n            }\r\n            var loading = this.msgHelper.showWorkingDialog('Changing the password ...');\r\n\r\n            this.httpCall.callApi(requestJson,this.codes.API_CHANGE_USER_PASSWORD).then(responseJson=>{\r\n\r\n              loading.dismiss();\r\n\r\n              if(this.dataValidation.isEmptyJson(responseJson))\r\n              {\r\n                this.msgHelper.showErrorDialog('Error !!','Empty response received from server  !!!');\r\n                return;\r\n              } \r\n              if(responseJson['status']==1){\r\n                this.msgHelper.showToast('Password changed successfully !!!');\r\n              }\r\n\r\n            });\r\n\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n     alert.present();\r\n\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-message-notification-list/user-message-notification-list.ts"],"sourceRoot":""}